[{"/home/arjun/Dal_Projects/react-project/duck-feeds/client/src/index.js":"1","/home/arjun/Dal_Projects/react-project/duck-feeds/client/src/App.js":"2","/home/arjun/Dal_Projects/react-project/duck-feeds/client/src/components/MainSection/Home.js":"3","/home/arjun/Dal_Projects/react-project/duck-feeds/client/src/components/DashBoard/DashBoard.js":"4","/home/arjun/Dal_Projects/react-project/duck-feeds/client/src/components/MainSection/DuckSection.js":"5","/home/arjun/Dal_Projects/react-project/duck-feeds/client/src/components/MainSection/Features.js":"6","/home/arjun/Dal_Projects/react-project/duck-feeds/client/src/components/Header/HeaderSection.js":"7","/home/arjun/Dal_Projects/react-project/duck-feeds/client/src/components/Navigation/NavigationBar.js":"8","/home/arjun/Dal_Projects/react-project/duck-feeds/client/src/components/Footer/Footer.js":"9","/home/arjun/Dal_Projects/react-project/duck-feeds/client/src/components/Form/DuckForm.js":"10","/home/arjun/Dal_Projects/react-project/duck-feeds/client/src/components/MainSection/Data.js":"11","/home/arjun/Dal_Projects/react-project/duck-feeds/client/src/components/MainSection/FeaturesElements.js":"12","/home/arjun/Dal_Projects/react-project/duck-feeds/client/src/components/DashBoard/FeedTables.js":"13","/home/arjun/Dal_Projects/react-project/duck-feeds/client/src/components/DashBoard/BarChart.js":"14","/home/arjun/Dal_Projects/react-project/duck-feeds/client/src/components/DashBoard/LineChart.js":"15","/home/arjun/Dal_Projects/react-project/duck-feeds/client/src/components/DashBoard/PieChart.js":"16","/home/arjun/Dal_Projects/react-project/duck-feeds/client/src/components/MainSection/sectionElements.js":"17","/home/arjun/Dal_Projects/react-project/duck-feeds/client/src/components/Navigation/NavBarStyles.js":"18","/home/arjun/Dal_Projects/react-project/duck-feeds/client/src/components/Header/HeaderElements.js":"19","/home/arjun/Dal_Projects/react-project/duck-feeds/client/src/components/Footer/FooterElements.js":"20","/home/arjun/Dal_Projects/react-project/duck-feeds/client/src/components/Form/DuckFormElements.js":"21"},{"size":199,"mtime":1608171322291,"results":"22","hashOfConfig":"23"},{"size":459,"mtime":1608210042151,"results":"24","hashOfConfig":"23"},{"size":837,"mtime":1608081939015,"results":"25","hashOfConfig":"23"},{"size":1944,"mtime":1608213961286,"results":"26","hashOfConfig":"23"},{"size":1799,"mtime":1608212103974,"results":"27","hashOfConfig":"23"},{"size":2858,"mtime":1608213342580,"results":"28","hashOfConfig":"23"},{"size":503,"mtime":1608138990287,"results":"29","hashOfConfig":"23"},{"size":2439,"mtime":1608210304361,"results":"30","hashOfConfig":"23"},{"size":1566,"mtime":1608139607222,"results":"31","hashOfConfig":"23"},{"size":8720,"mtime":1608211975727,"results":"32","hashOfConfig":"23"},{"size":1743,"mtime":1608213653805,"results":"33","hashOfConfig":"23"},{"size":1781,"mtime":1608174593596,"results":"34","hashOfConfig":"23"},{"size":5402,"mtime":1608210159720,"results":"35","hashOfConfig":"23"},{"size":2825,"mtime":1608214094580,"results":"36","hashOfConfig":"23"},{"size":2628,"mtime":1608214152427,"results":"37","hashOfConfig":"23"},{"size":2560,"mtime":1608214185316,"results":"38","hashOfConfig":"23"},{"size":2404,"mtime":1608211700048,"results":"39","hashOfConfig":"23"},{"size":3390,"mtime":1608139852169,"results":"40","hashOfConfig":"23"},{"size":907,"mtime":1607973270699,"results":"41","hashOfConfig":"23"},{"size":1839,"mtime":1608139618206,"results":"42","hashOfConfig":"23"},{"size":1436,"mtime":1608139792941,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jogfho",{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/arjun/Dal_Projects/react-project/duck-feeds/client/src/index.js",[],"/home/arjun/Dal_Projects/react-project/duck-feeds/client/src/App.js",["88"],"/home/arjun/Dal_Projects/react-project/duck-feeds/client/src/components/MainSection/Home.js",["89","90"],"/home/arjun/Dal_Projects/react-project/duck-feeds/client/src/components/DashBoard/DashBoard.js",[],"/home/arjun/Dal_Projects/react-project/duck-feeds/client/src/components/MainSection/DuckSection.js",["91","92","93"],"/home/arjun/Dal_Projects/react-project/duck-feeds/client/src/components/MainSection/Features.js",[],"/home/arjun/Dal_Projects/react-project/duck-feeds/client/src/components/Header/HeaderSection.js",[],"/home/arjun/Dal_Projects/react-project/duck-feeds/client/src/components/Navigation/NavigationBar.js",[],"/home/arjun/Dal_Projects/react-project/duck-feeds/client/src/components/Footer/Footer.js",[],"/home/arjun/Dal_Projects/react-project/duck-feeds/client/src/components/Form/DuckForm.js",["94","95","96","97","98","99","100"],"import React, { useState } from 'react'\n\nimport { FeedCol } from '../Footer/FooterElements'\nimport { FeatureHeader, FeatureRow } from '../MainSection/FeaturesElements'\nimport { FeedForm, FormSection, Input, Select, FormHeader, Label } from './DuckFormElements'\nimport countryList from 'react-select-country-list'\nimport { useEffect } from 'react'\n\n\n\n\nfunction DuckForm() {\n    const [displaytext, setDisplayTest] = useState(false)\n    const [displayCountry, setDisplayCountry] = useState(countryList().getLabels())\n    const [foodTypes, updateFoodTypes] = useState(['Grains', 'Fish', 'Plants', 'Worms'])\n\n\n    const countryOptions = displayCountry.map((x) => { return <option key={x} value={x}>{x}</option> });\n    // const[formData,setFormData]=useState(    {''})\n    \n    \n\n    useEffect( function upFood(){\n        async function fetchFoodType(){\n            const foodTypeResponse = await fetch('http://localhost:8080/survey/foodTypes', {\n            method: 'GET',\n            mode: \"cors\",\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }).then(response => response.json());\n        if (foodTypeResponse['status'] == 200) {\n\n            var listVal=[];\n            // console.log(foodTypeResponse.json().hits);\n            var resData = foodTypeResponse['data'];\n            console.log(resData);\n            // var listFoodType = []\n            resData.forEach(element => {\n                listVal.push(element.name)\n\n            });\n            console.log(listVal);\n            console.log(foodTypes);\n            var currentFoodTypes=[...foodTypes];\n            currentFoodTypes= currentFoodTypes.concat(listVal);\n            currentFoodTypes.push('others')\n            updateFoodTypes(currentFoodTypes);\n\n        }\n\n        }\n        fetchFoodType();\n\n    },[]);\n    \n    const foodTypeOptions = foodTypes.map((x) => { return <option key={x} value={x}>{x}</option> });\n\n    const handleClick = (val) => {\n        console.log('Entry')\n        let check = val.target.value;\n        if (check == 'others') {\n            setDisplayTest(true);\n            console.log('called')\n        }\n        else {\n            setDisplayTest(false);\n        }\n    }\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        console.log('Entered');\n\n        console.log(e.target);\n        const data = new FormData(e.target);\n        var body = {};\n        for (var [key, value] of data.entries()) {\n            body[key] = value;\n        }\n        body['foodDescription'] = body['food']\n        if (body['foodType'] == 'others') {\n            console.log('b');\n            if (body['food_type_text'].trim().length > 0) {\n                body['foodType'] = body['food_type_text'];\n            }\n        }\n        \n\n        console.log(body);\n\n        const response = await fetch('http://localhost:8080/survey/participate', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(body),\n        });\n\n        if (response['status'] == 200) {\n            alert('Thanks for Submitting');\n            // e.target.reset();\n            console.log(response)\n            console.log(foodTypes)\n \n        }\n        else {\n            alert('server Error try again Later and check logs');\n        }\n    };\n\n    return (\n        <>\n            <FormSection id='Survey'>\n                <FeatureRow>\n                    <FormHeader>\n                        I welcome sharing your knowledge on ducks\n                        </FormHeader>\n                </FeatureRow>\n                <FeatureRow>\n                    <FeedForm method='post' action='#' onSubmit={handleSubmit}>\n                        <FeatureRow>\n                            <FeedCol isValue={false}>\n                                <Label for='name' isDisplay={true}>Nick Name</Label>\n\n                            </FeedCol>\n                            <FeedCol isValue={true}>\n                                <Input type=\"text\" name=\"nickname\" id=\"nickname\" isDisplay={true} placeholder=\"Your Nick name\" required />\n                            </FeedCol>\n\n                        </FeatureRow>\n                        <FeatureRow>\n                            <FeedCol isValue={false}>\n                                <Label for='park' isDisplay={true}>Place Name</Label>\n\n                            </FeedCol>\n                            <FeedCol isValue={true}>\n                                <Input type=\"text\" name=\"place\" id=\"place\" isDisplay={true} placeholder=\"Place Name\" required />\n                            </FeedCol>\n\n                        </FeatureRow>\n\n\n                        <FeatureRow>\n                            <FeedCol isValue={false}>\n                                <Label for='food' isDisplay={true}>Food</Label>\n\n                            </FeedCol>\n                            <FeedCol isValue={true}>\n                                <Input type=\"text\" name=\"food\" id=\"food\" isDisplay={true} placeholder=\"What food?\" required />\n                            </FeedCol>\n\n                        </FeatureRow>\n                        <FeatureRow>\n                            <FeedCol isValue={false}>\n                                <Label for='foodtype' isDisplay={true}>Food Type</Label>\n\n                            </FeedCol>\n                            <FeedCol isValue={true}>\n                                <Select name=\"foodType\" id=\"foodType\" onChange={handleClick}>\n                                {foodTypeOptions}\n                                </Select>\n                            </FeedCol>\n\n                        </FeatureRow>\n                        <FeatureRow>\n                            <FeedCol isValue={false}>\n                                <Label for='food_type' isDisplay={displaytext}>Enter Food Type</Label>\n\n                            </FeedCol>\n                            <FeedCol isValue={true}>\n                                <Input type=\"text\" name=\"food_type_text\" isDisplay={displaytext} id=\"food_type_text\" placeholder=\"Enter Food Type\" />\n                            </FeedCol>\n\n                        </FeatureRow>\n                        <FeatureRow>\n                            <FeedCol isValue={false}>\n                                <Label for='country' isDisplay={true}>Country</Label>\n\n                            </FeedCol>\n                            <FeedCol isValue={true}>\n                                <Select name=\"country\" id=\"country\" >\n                                    {countryOptions}\n                                </Select>\n                            </FeedCol>\n\n\n                        </FeatureRow>\n                        <FeatureRow>\n                            <FeedCol isValue={false}>\n                                <Label for='time' isDisplay={true}>Time for feeding</Label>\n\n                            </FeedCol>\n                            <FeedCol isValue={true}>\n                                <Input type=\"time\" name=\"time\" id=\"time\" isDisplay={true} required />\n                            </FeedCol>\n\n                        </FeatureRow>\n                        <FeatureRow>\n                            <FeedCol isValue={false}>\n                                <Label for='duck_count' isDisplay={true}>Duck Count</Label>\n\n                            </FeedCol>\n                            <FeedCol isValue={true}>\n                                <Input type=\"number\" name=\"duckCount\" id=\"duckCount\" isDisplay={true} placeholder=\"How Many Ducks are feed?\" required />\n                            </FeedCol>\n\n                        </FeatureRow>\n                        <FeatureRow>\n                            <FeedCol isValue={false}>\n                                <Label for='quantity' isDisplay={true}>Quantity</Label>\n\n                            </FeedCol>\n                            <FeedCol isValue={true}>\n                                <Input type=\"number\" name=\"feedAmount\" id=\"feedAmount\" isDisplay={true} placeholder=\"Quantity Feed?\" required />\n                            </FeedCol>\n\n                        </FeatureRow>\n                        <FeatureRow>\n                            <FeedCol isValue={false}>\n                                <Label></Label>\n\n                            </FeedCol>\n                            <FeedCol isValue={true}>\n                                <Input type=\"submit\" isDisplay={true} value='Submit' />\n                            </FeedCol>\n\n                        </FeatureRow>\n\n\n                    </FeedForm>\n                </FeatureRow>\n            </FormSection>\n\n        </>\n    )\n}\n\nexport default DuckForm\n\n\n",["101","102"],"/home/arjun/Dal_Projects/react-project/duck-feeds/client/src/components/MainSection/Data.js",[],"/home/arjun/Dal_Projects/react-project/duck-feeds/client/src/components/MainSection/FeaturesElements.js",["103","104","105","106"],"/home/arjun/Dal_Projects/react-project/duck-feeds/client/src/components/DashBoard/FeedTables.js",["107","108","109"],"/home/arjun/Dal_Projects/react-project/duck-feeds/client/src/components/DashBoard/BarChart.js",["110"],"/home/arjun/Dal_Projects/react-project/duck-feeds/client/src/components/DashBoard/LineChart.js",["111"],"/home/arjun/Dal_Projects/react-project/duck-feeds/client/src/components/DashBoard/PieChart.js",["112","113","114"],"/home/arjun/Dal_Projects/react-project/duck-feeds/client/src/components/MainSection/sectionElements.js",["115"],"/home/arjun/Dal_Projects/react-project/duck-feeds/client/src/components/Navigation/NavBarStyles.js",["116","117"],"/home/arjun/Dal_Projects/react-project/duck-feeds/client/src/components/Header/HeaderElements.js",["118","119"],"/home/arjun/Dal_Projects/react-project/duck-feeds/client/src/components/Footer/FooterElements.js",["120"],"/home/arjun/Dal_Projects/react-project/duck-feeds/client/src/components/Form/DuckFormElements.js",["121"],{"ruleId":"122","severity":1,"message":"123","line":1,"column":50,"nodeType":"124","messageId":"125","endLine":1,"endColumn":61},{"ruleId":"122","severity":1,"message":"126","line":3,"column":10,"nodeType":"124","messageId":"125","endLine":3,"endColumn":22},{"ruleId":"122","severity":1,"message":"127","line":3,"column":37,"nodeType":"124","messageId":"125","endLine":3,"endColumn":50},{"ruleId":"122","severity":1,"message":"128","line":3,"column":95,"nodeType":"124","messageId":"125","endLine":3,"endColumn":108},{"ruleId":"122","severity":1,"message":"129","line":3,"column":110,"nodeType":"124","messageId":"125","endLine":3,"endColumn":121},{"ruleId":"122","severity":1,"message":"130","line":3,"column":145,"nodeType":"124","messageId":"125","endLine":3,"endColumn":159},{"ruleId":"122","severity":1,"message":"131","line":4,"column":10,"nodeType":"124","messageId":"125","endLine":4,"endColumn":23},{"ruleId":"122","severity":1,"message":"132","line":14,"column":28,"nodeType":"124","messageId":"125","endLine":14,"endColumn":45},{"ruleId":"133","severity":1,"message":"134","line":32,"column":40,"nodeType":"135","messageId":"136","endLine":32,"endColumn":42},{"ruleId":"137","severity":1,"message":"138","line":55,"column":7,"nodeType":"139","endLine":55,"endColumn":9,"suggestions":"140"},{"ruleId":"133","severity":1,"message":"134","line":62,"column":19,"nodeType":"135","messageId":"136","endLine":62,"endColumn":21},{"ruleId":"133","severity":1,"message":"134","line":83,"column":30,"nodeType":"135","messageId":"136","endLine":83,"endColumn":32},{"ruleId":"133","severity":1,"message":"134","line":101,"column":32,"nodeType":"135","messageId":"136","endLine":101,"endColumn":34},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"122","severity":1,"message":"145","line":3,"column":16,"nodeType":"124","messageId":"125","endLine":3,"endColumn":29},{"ruleId":"133","severity":1,"message":"146","line":12,"column":26,"nodeType":"135","messageId":"136","endLine":12,"endColumn":28},{"ruleId":"133","severity":1,"message":"146","line":75,"column":30,"nodeType":"135","messageId":"136","endLine":75,"endColumn":32},{"ruleId":"133","severity":1,"message":"146","line":82,"column":34,"nodeType":"135","messageId":"136","endLine":82,"endColumn":36},{"ruleId":"122","severity":1,"message":"147","line":67,"column":7,"nodeType":"124","messageId":"125","endLine":67,"endColumn":13},{"ruleId":"133","severity":1,"message":"134","line":120,"column":33,"nodeType":"135","messageId":"136","endLine":120,"endColumn":35},{"ruleId":"148","severity":1,"message":"149","line":125,"column":34,"nodeType":"150","messageId":"151","endLine":125,"endColumn":36},{"ruleId":"122","severity":1,"message":"152","line":33,"column":14,"nodeType":"124","messageId":"125","endLine":33,"endColumn":17},{"ruleId":"122","severity":1,"message":"152","line":33,"column":14,"nodeType":"124","messageId":"125","endLine":33,"endColumn":17},{"ruleId":"122","severity":1,"message":"153","line":2,"column":10,"nodeType":"124","messageId":"125","endLine":2,"endColumn":13},{"ruleId":"122","severity":1,"message":"154","line":2,"column":15,"nodeType":"124","messageId":"125","endLine":2,"endColumn":19},{"ruleId":"122","severity":1,"message":"152","line":33,"column":14,"nodeType":"124","messageId":"125","endLine":33,"endColumn":17},{"ruleId":"122","severity":1,"message":"145","line":2,"column":18,"nodeType":"124","messageId":"125","endLine":2,"endColumn":31},{"ruleId":"122","severity":1,"message":"155","line":2,"column":10,"nodeType":"124","messageId":"125","endLine":2,"endColumn":23},{"ruleId":"122","severity":1,"message":"145","line":7,"column":16,"nodeType":"124","messageId":"125","endLine":7,"endColumn":29},{"ruleId":"122","severity":1,"message":"156","line":2,"column":10,"nodeType":"124","messageId":"125","endLine":2,"endColumn":13},{"ruleId":"122","severity":1,"message":"145","line":3,"column":18,"nodeType":"124","messageId":"125","endLine":3,"endColumn":31},{"ruleId":"122","severity":1,"message":"145","line":2,"column":18,"nodeType":"124","messageId":"125","endLine":2,"endColumn":31},{"ruleId":"122","severity":1,"message":"145","line":3,"column":18,"nodeType":"124","messageId":"125","endLine":3,"endColumn":31},"no-unused-vars","'useLocation' is defined but never used.","Identifier","unusedVar","'homeDataFour' is defined but never used.","'homeDataThree' is defined but never used.","'SectionButton' is defined but never used.","'SectionLink' is defined but never used.","'ContributeLink' is defined but never used.","'FeatureHeader' is defined but never used.","'setDisplayCountry' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'foodTypes'. Either include it or remove the dependency array.","ArrayExpression",["157"],"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"'ThemeProvider' is defined but never used.","Expected '!==' and instead saw '!='.","'styles' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'key' is assigned a value but never used.","'Bar' is defined but never used.","'Line' is defined but never used.","'MdFingerprint' is defined but never used.","'css' is defined but never used.",{"desc":"160","fix":"161"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [foodTypes]",{"range":"162","text":"163"},[1819,1821],"[foodTypes]"]